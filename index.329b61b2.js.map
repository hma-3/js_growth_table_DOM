{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCKA,IAAM,EAAO,SAAS,aAAa,CAAC,UAAU,OAAO,CAAC,EAAE,CAClD,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAqB,SAAS,aAAa,CAAC,kBAElD,SAAS,IACP,IAAM,EAAY,EAAK,IAAI,CAAC,MAAM,CAC5B,EAAe,EAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,AAE9C,CAAA,EAAgB,QAAQ,CAAG,GAbjB,GAcV,EAAgB,QAAQ,CAAG,GAbjB,EAcV,EAAmB,QAAQ,CAAG,GAfpB,GAgBV,EAAmB,QAAQ,CAAG,GAfpB,CAgBZ,CAEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAS,EAAK,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,EAElC,CAAA,EAAK,IAAI,CAAC,MAAM,CAvBZ,KAwBN,EAAK,WAAW,CAAC,GAEjB,IAEJ,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACpC,EAAK,IAAI,CAAC,MAAM,CA9BZ,IA+BN,EAAK,WAAW,CAAC,EAAK,gBAAgB,EAEtC,IAEJ,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WACvC,EAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAvCrB,KAwCL,EAAG,EAAK,IAAI,EAAE,OAAO,CAAC,SAAC,CAAvB,EACC,EAAI,UAAU,EAChB,GAEA,IAEJ,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WACvC,EAAK,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAhDrB,IAiDL,EAAG,EAAK,IAAI,EAAE,OAAO,CAAC,SAAC,CAAvB,EACC,EAAI,UAAU,CAAC,GACjB,GAEA,IAEJ,GAEA,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar MAX = 10;\nvar MIN = 2;\nvar body = document.querySelector(\".field\").tBodies[0];\nvar appendRowButton = document.querySelector(\".append-row\");\nvar removeRowButton = document.querySelector(\".remove-row\");\nvar appendColumnButton = document.querySelector(\".append-column\");\nvar removeColumnButton = document.querySelector(\".remove-column\");\nfunction updateButtons() {\n    var rowsCount = body.rows.length;\n    var columnsCount = body.rows[0].cells.length;\n    appendRowButton.disabled = rowsCount >= MAX;\n    removeRowButton.disabled = rowsCount <= MIN;\n    appendColumnButton.disabled = columnsCount >= MAX;\n    removeColumnButton.disabled = columnsCount <= MIN;\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    appendRowButton.addEventListener(\"click\", function() {\n        var newRow = body.rows[0].cloneNode(true);\n        if (body.rows.length < MAX) {\n            body.appendChild(newRow);\n            updateButtons();\n        }\n    });\n    removeRowButton.addEventListener(\"click\", function() {\n        if (body.rows.length > MIN) {\n            body.removeChild(body.lastElementChild);\n            updateButtons();\n        }\n    });\n    appendColumnButton.addEventListener(\"click\", function() {\n        if (body.rows[0].cells.length < MAX) {\n            _to_consumable_array(body.rows).forEach(function(row) {\n                row.insertCell();\n            });\n            updateButtons();\n        }\n    });\n    removeColumnButton.addEventListener(\"click\", function() {\n        if (body.rows[0].cells.length > MIN) {\n            _to_consumable_array(body.rows).forEach(function(row) {\n                row.deleteCell(-1);\n            });\n            updateButtons();\n        }\n    });\n    updateButtons();\n});\n\n//# sourceMappingURL=index.329b61b2.js.map\n","'use strict';\n\nconst MAX = 10;\nconst MIN = 2;\n\nconst body = document.querySelector('.field').tBodies[0];\nconst appendRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\nconst appendColumnButton = document.querySelector('.append-column');\nconst removeColumnButton = document.querySelector('.remove-column');\n\nfunction updateButtons() {\n  const rowsCount = body.rows.length;\n  const columnsCount = body.rows[0].cells.length;\n\n  appendRowButton.disabled = rowsCount >= MAX;\n  removeRowButton.disabled = rowsCount <= MIN;\n  appendColumnButton.disabled = columnsCount >= MAX;\n  removeColumnButton.disabled = columnsCount <= MIN;\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  appendRowButton.addEventListener('click', () => {\n    const newRow = body.rows[0].cloneNode(true);\n\n    if (body.rows.length < MAX) {\n      body.appendChild(newRow);\n\n      updateButtons();\n    }\n  });\n\n  removeRowButton.addEventListener('click', () => {\n    if (body.rows.length > MIN) {\n      body.removeChild(body.lastElementChild);\n\n      updateButtons();\n    }\n  });\n\n  appendColumnButton.addEventListener('click', () => {\n    if (body.rows[0].cells.length < MAX) {\n      [...body.rows].forEach((row) => {\n        row.insertCell();\n      });\n\n      updateButtons();\n    }\n  });\n\n  removeColumnButton.addEventListener('click', () => {\n    if (body.rows[0].cells.length > MIN) {\n      [...body.rows].forEach((row) => {\n        row.deleteCell(-1);\n      });\n\n      updateButtons();\n    }\n  });\n\n  updateButtons();\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","body","document","querySelector","tBodies","appendRowButton","removeRowButton","appendColumnButton","removeColumnButton","updateButtons","rowsCount","rows","columnsCount","cells","disabled","addEventListener","newRow","cloneNode","appendChild","removeChild","lastElementChild","forEach","row","insertCell","deleteCell"],"version":3,"file":"index.329b61b2.js.map"}